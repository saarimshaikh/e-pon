// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql" // Adjus the provider based on your database
  url      = env("DATABASE_URL")
}

model Users {
  user_id    String   @id @default(uuid()) @db.Uuid
  name       String
  email      String   @unique
  password   String
  created_at DateTime @default(now())

  //Relations
  savings      Savings[]
  groups       Groups[]       @relation("GroupCreator")
  groupMembers GroupMembers[]
  transaction  Transactions[]
}

model Savings {
  saving_id  String      @id @default(uuid()) @db.Uuid
  user_id    String      @db.Uuid
  group_id   String?     @db.Uuid
  amount     Decimal     @db.Decimal(10, 2)
  type       SavingTypes
  created_at DateTime    @default(now())
  // Relations 

  user         Users          @relation(fields: [user_id], references: [user_id])
  group        Groups?        @relation(fields: [group_id], references: [group_id])
  transactions Transactions[]
}

model Groups {
  group_id   String   @id @default(uuid()) @db.Uuid
  group_name String
  created_by String   @db.Uuid
  created_at DateTime @default(now())

  // Relations
  creator      Users          @relation("GroupCreator", fields: [created_by], references: [user_id])
  savings      Savings[]
  members      GroupMembers[]
  transactions Transactions[]
}

model GroupMembers {
  member_id String     @id @default(uuid()) @db.Uuid
  group_id  String     @db.Uuid
  user_id   String     @db.Uuid
  role      GroupRoles
  joined_at DateTime   @default(now())

  //Relations
  group Groups @relation(fields: [group_id], references: [group_id])
  user  Users  @relation(fields: [user_id], references: [user_id])
}

model Transactions {
  transaction_id String           @id @default(uuid()) @db.Uuid
  user_id        String           @db.Uuid
  group_id       String?          @db.Uuid
  saving_id      String           @db.Uuid
  type           TransactionTypes
  amount         Decimal          @db.Decimal(10, 2)
  created_at     DateTime         @default(now())

  //Relations
  user   Users   @relation(fields: [user_id], references: [user_id])
  group  Groups? @relation(fields: [group_id], references: [group_id])
  saving Savings @relation(fields: [saving_id], references: [saving_id])
}

enum SavingTypes {
  personal
  group
}

enum GroupRoles {
  admin
  member
}

enum TransactionTypes {
  deposit
  withdrawal
}
